name: Deploy .NET Lambdas to AWS Managed Environment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: development #${{ inputs.environment }} # Adjust when clicking the "Run workflow" button in GitHub Actions portal
    permissions:
      id-token: write # For OIDC authentication
      contents: read # For checkout

    steps:
    ## Step used for debuging
    # - name: Test
    #   run: 
    #     echo "Inputs environment is ${{ inputs.environment }}"
    #     echo "ENV variable is ${{ vars.ENV }}"

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2 # Required to get changes

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ vars.AWS_EU_CENTRAL_1_REGION }}

    - name: Get changed projects
      id: changed-projects
      run: |
        CHANGED_PROJECTS=()
        
        for project in $(find . -name '*.csproj'); do
          project_dir=$(dirname "$project")
          project_name=$(basename "$project" .csproj)
          
          # Check if project name ends with 'Lambda'
          if [[ "$project_name" == *Lambda ]]; then
            # Check if any files within the project directory were modified in the last commit
            if git diff --name-only HEAD^ HEAD -- "$project_dir" | grep -q .; then
              CHANGED_PROJECTS+=("$project_name")
            fi
          fi
        done
        
        # Convert array to space-separated string for output
        CHANGED_PROJECTS_STR="${CHANGED_PROJECTS[@]}"
        echo "Changed Lambda Projects: $CHANGED_PROJECTS_STR"
        echo "changed_projects=$CHANGED_PROJECTS" >> "$GITHUB_ENV"

    - name: Build and deploy Lambda functions
      if: steps.changed-projects.outputs.changed_projects != ''
      run: |
        for project_dir in ${{ steps.changed-projects.outputs.changed_projects }}; do
          # Updating Lambda function code using ZIP files
          
          echo "Publishing Lambda function to project dir: $project_dir"
          dotnet publish "$project_dir" -c Release -o "$project_dir/publish"
          
          echo "Zipping Lambda function to project dir: $project_dir"/publish $project_name.zip ..."
          zip -r "$project_name.zip" "$project_dir/publish"
          echo "Lambda zipped."
          
          function_name="${project_name}-${{ vars.ENV }}"

          echo "Updating Lambda function code: $function_name ..."
          aws lambda update-function-code --function-name "$function_name" --zip-file fileb://"$project_name.zip"
          echo "Lambda updated."
          
          echo "Removing zip ..."
          rm "$project_name.zip"
          echo "zip removed."
        done
      env:
        AWS_REGION: ${{ vars.AWS_EU_CENTRAL_1_REGION }}