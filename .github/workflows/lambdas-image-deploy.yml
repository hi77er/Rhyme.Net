name: Deploy .NET Lambdas as Container Images to AWS ECR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} # Adjust when clicking the "Run workflow" button in GitHub Actions portal
    permissions:
      id-token: write # For OIDC authentication
      contents: read # For checkout

    steps:
      - name: Test
        run: echo "ENV variable is ${{ vars.ENV }}"

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 2 # Required to get changes

    #   - name: Setup .NET
    #     uses: actions/setup-dotnet@v4
    #     with:
    #       dotnet-version: '8.0.x'

    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
    #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
    #       aws-region: ${{ vars.AWS_EU_CENTRAL_1_REGION }}

    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v2

    #   - name: Get changed projects
    #     id: changed-projects
    #     run: |
    #       changed_files=$(git diff --name-only HEAD~1 HEAD)
    #       project_paths=$(find . -name "*.csproj" -print0 | xargs -0 grep -l "Lambda" | grep -v "/test/")
    #       changed_projects=""
    #       for project_path in $project_paths; do
    #         project_dir=$(dirname "$project_path")
    #         if [[ $changed_files == *"$project_dir"* ]]; then
    #           changed_projects="$changed_projects $project_dir"
    #         fi
    #       done
    #       echo "changed_projects=$changed_projects" >> $GITHUB_OUTPUT

    #   - name: Build and push Docker images
    #     if: steps.changed-projects.outputs.changed_projects != ''
    #     run: |
    #       for project_dir in ${{ steps.changed-projects.outputs.changed_projects }}; do
    #         project_name=$(basename "$project_dir")
    #         docker_image_name="<YOUR_ECR_REPOSITORY_PREFIX>/$project_name:latest"
    #         docker_build_context="$project_dir"
    #         docker_file="$project_dir/Dockerfile"
            
    #         docker build -t "$docker_image_name" -f "$docker_file" "$docker_build_context"
    #         aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
    #         docker push "$docker_image_name"
    #       done
    #     env:
    #       AWS_REGION: ${{ vars.AWS_EU_CENTRAL_1_REGION }}