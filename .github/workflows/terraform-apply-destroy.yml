name: Terraform Apply / Destroy

on:
  workflow_dispatch: # Allow manual triggering
    inputs:
      action:
        description: "Terraform action (apply/destroy)"
        required: true
        default: "apply"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Retrieve Terraform State Artifact # Downloads the state file to the terraform directory
        if: github.event.inputs.action == 'destroy'  # Save state to the Backend (S3 Bucket) only when applying resources
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: terraform/
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ vars.AWS_EU_CENTRAL_1_REGION }}

      - name: Terraform Init
        run: terraform init -backend=true
        working-directory: terraform

      - name: Terraform Validate State
        if: github.event.inputs.action == 'destroy'  # Validate state only when destroying resources
        run: terraform state list || terraform refresh
        working-directory: terraform
 
      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: terraform
           
      - name: Run Terraform Action # apply or destroy, depending on the inputs.action
        run: terraform ${{ github.event.inputs.action }} -no-color -auto-approve
        working-directory: terraform

      - name: Save Terraform State as Artifact
        if: github.event.inputs.action == 'apply'  # Save state to the Backend (S3 Bucket) only when applying resources
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform/terraform.tfstate